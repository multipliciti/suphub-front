version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@7.3.0
  aws-eks: circleci/aws-eks@2.1.1
  aws-cli: circleci/aws-cli@2.0
  kubernetes: circleci/kubernetes@1.3.0

jobs:
  patch_deployment:
    docker:
      - image: 'cimg/python:3.10'
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
      deployment-name:
        description: |
          Name of the Kubernetes Deployment
        type: string
      kubernetes-namespace:
        description: |
          Name of the Kubernetes namespace the deployment is deployed to
        type: string
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          aws-region: ${AWS_REGION}
      - run:
          command: |
            kubectl patch deployment << parameters.deployment-name >> -n << parameters.kubernetes-namespace >> -p "{\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"build\":\"${CIRCLE_SHA1}\"}}}}}}"
          name: Patch Deployment
workflows:
  build-and-deploy-frontend:
    jobs:
      - aws-ecr/build-and-push-image:
          name: "build-front-dev"
          filters:
            branches:
              only:
                - develop
          extra-build-args: "--build-arg NEXT_PUBLIC_BASE_URL=${DEV_API_URL} --build-arg NEXT_PUBLIC_CLIENT_HOST=${DEV_NEXT_PUBLIC_CLIENT_HOST}"
          repo: "${DEV_AWS_ECR_REPO}"
          tag: "latest,${CIRCLE_SHA1}"
      - patch_deployment:
          name: "deploy-front-dev"
          filters:
            branches:
              only:
                - develop
          cluster-name: "${EKS_CLUSTER_NAME}"
          deployment-name: "mysuphub-front-dev"
          kubernetes-namespace: "dev-front"
          requires:
            - build-front-dev